# name: Accuknox-Job Workflow
# on:
#   push:
#     tags:
#     - "v[0-9]+.[0-9]+.[0-9]+"
#     - "v[0-9]+.[0-9]+.[0-9]+-*"
#   pull_request_target:
#     branches:
#     - "*"


# env:
#   REPO: public.ecr.aws/k9v9d5v2
#   CHART_NAME_K8S: cis-k8s-job
#   CHART_PATH_K8S: ./cis-k8s-job
#   CHART_REVISION_NAME_K8S: cis-k8s-job
#   CHART_NAME_K8TLS: k8tls-job
#   CHART_PATH_K8TLS: ./k8tls-job
#   CHART_REVISION_NAME_K8TLS: k8tls-job
#   CHART_NAME_KIEM: kiem-job
#   CHART_PATH_KIEM: ./kiem-job
#   CHART_REVISION_NAME_KIEM: kiem-job
#   CHART_NAME_K8S_RISK_ASSESSMENT: k8s-risk-assessment-job
#   CHART_PATH_K8S_RISK_ASSESSMENT: ./k8s-risk-assessment-job
#   CHART_REVISION_NAME_K8S_RISK_ASSESSMENT: k8s-risk-assessment-job
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_ACCESS_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET_ID }} 
#   AWS_REGION: us-east-1


# jobs:
#   tag-validate:
#     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags/v')
#     steps:
#     - uses: rubenesp87/semver-validation-action@0.1.0
#       with:
#        version: ${{ github.ref_name }}
    
    
#   chart-validate-k8s:
#     runs-on: ubuntu-latest
#     if: always() && !contains(needs.tag-validate.result, 'failure')
#     needs: [tag-validate]
#     steps:
#     - name: Checkout source
#       uses: actions/checkout@v2
#     - name: Validate helm chart 
#       uses: accuknox/common-gh-actions/actions/helm-check@main
#       with:
#         chart-path: ${{ env.CHART_PATH_K8S }}        
#         revision-name: ${{ env.CHART_REVISION_NAME_K8S }}         
        
#   chart-validate-k8tls:
#     runs-on: ubuntu-latest
#     if: always() && !contains(needs.tag-validate.result, 'failure')
#     needs: [tag-validate]
#     steps:
#     - name: Checkout source
#       uses: actions/checkout@v2
#     - name: Validate helm chart 
#       uses: accuknox/common-gh-actions/actions/helm-check@main
#       with:
#         chart-path: ${{ env.CHART_PATH_K8TLS }}        
#         revision-name: ${{ env.CHART_REVISION_NAME_K8TLS }}  

#   chart-validate-kiem:
#     runs-on: ubuntu-latest
#     if: always() && !contains(needs.tag-validate.result, 'failure')
#     needs: [tag-validate]
#     steps:
#     - name: Checkout source
#       uses: actions/checkout@v2
#     - name: Validate helm chart 
#       uses: accuknox/common-gh-actions/actions/helm-check@main
#       with:
#         chart-path: ${{ env.CHART_PATH_KIEM }}        
#         revision-name: ${{ env.CHART_REVISION_NAME_KIEM}}         

#   chart-validate-k8s-risk-assessment:
#     runs-on: ubuntu-latest
#     if: always() && !contains(needs.tag-validate.result, 'failure')
#     needs: [tag-validate]
#     steps:
#     - name: Checkout source
#       uses: accuknox/common-gh-actions/actions/checkout-source@main
#     - name: Validate helm chart
#       uses: accuknox/common-gh-actions/actions/helm-check@main
#       with:
#         chart-path: ${{ env.CHART_PATH_K8S_RISK_ASSESSMENT }}
#         revision-name: ${{ env.CHART_REVISION_NAME_K8S_RISK_ASSESSMENT}}

#   chart-push-k8s:
#     runs-on: ubuntu-latest 
#     needs: [chart-validate-k8s]
#     if: startsWith(github.ref, 'refs/tags/v')
#     steps:
#     - name: Checkout source
#       uses: actions/checkout@v2
#     - name: Push helm chart to ECR
#       uses: accuknox/common-gh-actions/actions/helm-push@main
#       with:
#         chart-path: ${{ env.CHART_PATH_K8S }}
#         version: ${{ github.ref_name }}
#         ecr-region: ${{ env.AWS_REGION }}
#         ecr-repo: ${{ env.REPO }}
#         type: public

#   chart-push-k8tls:
#     runs-on: ubuntu-latest 
#     needs: [chart-validate-k8tls]
#     if: startsWith(github.ref, 'refs/tags/v')
#     steps:
#     - name: Checkout source
#       uses: actions/checkout@v2
#     - name: Push helm chart to ECR
#       uses: accuknox/common-gh-actions/actions/helm-push@main
#       with:
#         chart-path: ${{ env.CHART_PATH_K8TLS }}
#         version: ${{ github.ref_name }}
#         ecr-region: ${{ env.AWS_REGION }}
#         ecr-repo: ${{ env.REPO }}
#         type: public

#   chart-push-kiem:
#     runs-on: ubuntu-latest 
#     needs: [chart-validate-kiem]
#     if: startsWith(github.ref, 'refs/tags/v')
#     steps:
#     - name: Checkout source
#       uses: actions/checkout@v2
#     - name: Push helm chart to ECR
#       uses: accuknox/common-gh-actions/actions/helm-push@main
#       with:
#         chart-path: ${{ env.CHART_PATH_KIEM }}
#         version: ${{ github.ref_name }}
#         ecr-region: ${{ env.AWS_REGION }}
#         ecr-repo: ${{ env.REPO }}
#         type: public

#   chart-push-k8s-risk-assessment:
#     runs-on: ubuntu-latest
#     needs: [chart-validate-k8s-risk-assessment]
#     if: startsWith(github.ref, 'refs/tags/v')
#     steps:
#     - name: Checkout source
#       uses: accuknox/common-gh-actions/actions/checkout-source@main
#     - name: Push helm chart to ECR
#       uses: accuknox/common-gh-actions/actions/helm-push@main
#       with:
#         chart-path: ${{ env.CHART_PATH_K8S_RISK_ASSESSMENT }}
#         version: ${{ github.ref_name }}
#         ecr-region: ${{ env.AWS_REGION }}
#         ecr-repo: ${{ env.REPO }}
#         type: public

#   chart-validate:
#     run-on: ubuntu-latest
#     needs: [tag-validate]
#     steps:
#     - uses: actions/checkout@v2

#     - name: AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-region: ${{ env.AWS_REGION }}
#         aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_ID }}
        
#     - name: Login to ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1    
    
      
#     - name: Package and push helm chart to ECR
#       run: |
#         sed -i "s/^version:.*$/version: ${{ env.BUILD }}/" ${{ env.CHART_PATH_K8S }}/Chart.yaml
#         sed -i "s/^appVersion:.*$/appVersion: ${{ env.BUILD }}/" ${{ env.CHART_PATH_K8S }}/Chart.yaml
#         helm package ${{ env.CHART_PATH_K8S }}
#         helm push ${{ env.CHART_NAME_K8S }}-${{ env.BUILD }}.tgz oci://${{ env.REPO }}


name: Helm Charts Push to AWS ECR

on:
  push:
    branches:
      - test 

jobs:
  helm_push_to_ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Login to AWS ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin ${{secrets.REPO}}

      - name: Package k8s-risk-assessment-job
        run: |
          helm package k8s-risk-assessment-job
          CHART_PACKAGE_1=$(ls k8s-risk-assessment-job-*.tgz)
          echo "CHART_PACKAGE_1=$CHART_PACKAGE_1" >> $GITHUB_ENV

      - name: Package k8tls-job
        run: |
          helm package k8tls-job
          CHART_PACKAGE_2=$(ls k8tls-job-*.tgz)
          echo "CHART_PACKAGE_2=$CHART_PACKAGE_2" >> $GITHUB_ENV

      - name: Package kiem-job
        run: |
          helm package kiem-job
          CHART_PACKAGE_3=$(ls kiem-job-*.tgz)
          echo "CHART_PACKAGE_3=$CHART_PACKAGE_3" >> $GITHUB_ENV

      # - name: Package Helm Chart 4
      #   run: |
      #     helm package helm-chart-4
      #     CHART_PACKAGE_4=$(ls helm-chart-4-*.tgz)
      #     echo "CHART_PACKAGE_4=$CHART_PACKAGE_4" >> $GITHUB_ENV

      - name: Push Helm Chart 1 to ECR
        run: |
          helm push ${{ env.CHART_PACKAGE_1 }} oci://${{ secrets.REPO }}

      - name: Push Helm Chart 2 to ECR
        run: |
          helm push ${{ env.CHART_PACKAGE_2 }} oci://${{ secrets.REPO }}

      - name: Push Helm Chart 3 to ECR
        run: |
          helm push ${{ env.CHART_PACKAGE_3 }} oci://${{ secrets.REPO }}

      # - name: Push Helm Chart 4 to ECR
      #   run: |
      #     helm push ${{ env.CHART_PACKAGE_4 }} oci://${{ secrets.REPO }}

      - name: Notify Success
        if: success()
        run: echo "All Helm Charts have been successfully pushed to AWS ECR."

      - name: Notify Failure
        if: failure()
        run: echo "Failed to push one or more Helm Charts to AWS ECR."




