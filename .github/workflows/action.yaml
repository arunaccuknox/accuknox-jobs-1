# name: Accuknox-Job Workflow
# on:
#   push:
#     tags:
#     - "v[0-9]+.[0-9]+.[0-9]+"
#     - "v[0-9]+.[0-9]+.[0-9]+-*"
#   pull_request_target:
#     branches:
#     - "*"


# env:
#   REPO: public.ecr.aws/k9v9d5v2
#   CHART_NAME_K8S: cis-k8s-job
#   CHART_PATH_K8S: ./cis-k8s-job
#   CHART_REVISION_NAME_K8S: cis-k8s-job
#   CHART_NAME_K8TLS: k8tls-job
#   CHART_PATH_K8TLS: ./k8tls-job
#   CHART_REVISION_NAME_K8TLS: k8tls-job
#   CHART_NAME_KIEM: kiem-job
#   CHART_PATH_KIEM: ./kiem-job
#   CHART_REVISION_NAME_KIEM: kiem-job
#   CHART_NAME_K8S_RISK_ASSESSMENT: k8s-risk-assessment-job
#   CHART_PATH_K8S_RISK_ASSESSMENT: ./k8s-risk-assessment-job
#   CHART_REVISION_NAME_K8S_RISK_ASSESSMENT: k8s-risk-assessment-job
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_ACCESS_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET_ID }} 
#   AWS_REGION: us-east-1


# jobs:
#   tag-validate:
#     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags/v')
#     steps:
#     - uses: rubenesp87/semver-validation-action@0.1.0
#       with:
#        version: ${{ github.ref_name }}
    
    
  # chart-validate-k8s:
  #   runs-on: ubuntu-latest
  #   if: always() && !contains(needs.tag-validate.result, 'failure')
  #   needs: [tag-validate]
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main 
  #   - name: Validate helm chart 
  #     uses: accuknox/common-gh-actions/actions/helm-check@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_K8S }}        
  #       revision-name: ${{ env.CHART_REVISION_NAME_K8S }}         
        
  # chart-validate-k8tls:
  #   runs-on: ubuntu-latest
  #   if: always() && !contains(needs.tag-validate.result, 'failure')
  #   needs: [tag-validate]
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main 
  #   - name: Validate helm chart 
  #     uses: accuknox/common-gh-actions/actions/helm-check@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_K8TLS }}        
  #       revision-name: ${{ env.CHART_REVISION_NAME_K8TLS }}  

  # chart-validate-kiem:
  #   runs-on: ubuntu-latest
  #   if: always() && !contains(needs.tag-validate.result, 'failure')
  #   needs: [tag-validate]
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main 
  #   - name: Validate helm chart 
  #     uses: accuknox/common-gh-actions/actions/helm-check@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_KIEM }}        
  #       revision-name: ${{ env.CHART_REVISION_NAME_KIEM}}         

  # chart-validate-k8s-risk-assessment:
  #   runs-on: ubuntu-latest
  #   if: always() && !contains(needs.tag-validate.result, 'failure')
  #   needs: [tag-validate]
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main
  #   - name: Validate helm chart
  #     uses: accuknox/common-gh-actions/actions/helm-check@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_K8S_RISK_ASSESSMENT }}
  #       revision-name: ${{ env.CHART_REVISION_NAME_K8S_RISK_ASSESSMENT}}

  # chart-push-k8s:
  #   runs-on: ubuntu-latest 
  #   needs: [chart-validate-k8s]
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main 
  #   - name: Push helm chart to ECR
  #     uses: accuknox/common-gh-actions/actions/helm-push@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_K8S }}
  #       version: ${{ github.ref_name }}
  #       ecr-region: ${{ env.AWS_REGION }}
  #       ecr-repo: ${{ env.REPO }}
  #       type: public

  # chart-push-k8tls:
  #   runs-on: ubuntu-latest 
  #   needs: [chart-validate-k8tls]
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main 
  #   - name: Push helm chart to ECR
  #     uses: accuknox/common-gh-actions/actions/helm-push@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_K8TLS }}
  #       version: ${{ github.ref_name }}
  #       ecr-region: ${{ env.AWS_REGION }}
  #       ecr-repo: ${{ env.REPO }}
  #       type: public

  # chart-push-kiem:
  #   runs-on: ubuntu-latest 
  #   needs: [chart-validate-kiem]
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main 
  #   - name: Push helm chart to ECR
  #     uses: accuknox/common-gh-actions/actions/helm-push@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_KIEM }}
  #       version: ${{ github.ref_name }}
  #       ecr-region: ${{ env.AWS_REGION }}
  #       ecr-repo: ${{ env.REPO }}
  #       type: public

  # chart-push-k8s-risk-assessment:
  #   runs-on: ubuntu-latest
  #   needs: [chart-validate-k8s-risk-assessment]
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #   - name: Checkout source
  #     uses: accuknox/common-gh-actions/actions/checkout-source@main
  #   - name: Push helm chart to ECR
  #     uses: accuknox/common-gh-actions/actions/helm-push@main
  #     with:
  #       chart-path: ${{ env.CHART_PATH_K8S_RISK_ASSESSMENT }}
  #       version: ${{ github.ref_name }}
  #       ecr-region: ${{ env.AWS_REGION }}
  #       ecr-repo: ${{ env.REPO }}
  #       type: public

#   chart-validate:
#     run-on: ubuntu-latest
#     needs: [tag-validate]
#     steps:
#     - uses: actions/checkout@v2
    
#     # - name: Set git ssh private key
#     #   run: echo "${{ secrets.GIT_KEY }}" > GIT-KEY

#     - name: AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-region: ${{ env.AWS_REGION }}
#         aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_ID }}
        
#     - name: Login to ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1    
    
      
#     - name: Package and push helm chart to ECR
#       run: |
#         sed -i "s/^version:.*$/version: ${{ env.BUILD }}/" ${{ env.CHART_PATH_K8S }}/Chart.yaml
#         sed -i "s/^appVersion:.*$/appVersion: ${{ env.BUILD }}/" ${{ env.CHART_PATH_K8S }}/Chart.yaml
#         helm package ${{ env.CHART_PATH_K8S }}
#         helm push ${{ env.CHART_NAME_K8S }}-${{ env.BUILD }}.tgz oci://${{ env.REPO }}


name: Helm Chart Validation and Push

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+-*"
  pull_request_target:
    branches:
    - "*"

jobs:
  helm_validation_and_push:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: rubenesp87/semver-validation-action@0.1.0
      with:
       version: ${{ github.ref_name }}

    # Step 2: Validate Helm Chart (lint and template)
    - name: Validate Helm Chart
      id: helm_validation
      run: |
        pwd
        helm lint ./accuknox-jobs/cis-k8s-job/
        helm template ./cis-k8s-job > /dev/null
        helm lint ./k8s-risk-assessment-job
        helm template ./k8s-risk-assessment-job > /dev/null
        helm lint ./k8tls-job
        helm template ./k8tls-job > /dev/null
        helm lint ./kiem-job
        helm template ./kiem-job > /dev/null

    # Step 3: Push Helm Chart to AWS ECR (adjust as per your AWS credentials)
    - name: Push Helm Chart to AWS ECR
      id: helm_push
      env:
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ECR_REGISTRY: aws ecr-public get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin ${{secrets.REPO}}
        HELM_CHART_PATH: ./cis-k8s-job
      run: |
        # Login to ECR
        aws ecr get-login-password --region $AWS_REGION | helm registry login --username AWS --password-stdin $ECR_REGISTRY

        # Package Helm Chart
        helm package $HELM_CHART_PATH

        # Extract Helm Chart version
        CHART_VERSION=$(helm show chart $HELM_CHART_PATH | grep -m1 '^version:' | awk '{print $2}')

        # Push the Helm Chart to ECR
        helm push $ECR_REGISTRY/$HELM_CHART_PATH:$CHART_VERSION

    # Step 4: Notify success or failure
    - name: Notify Status
      if: success()
      run: echo "Helm Chart validated and pushed to AWS ECR successfully."

    - name: Notify Failure
      if: failure()
      run: echo "Failed to validate or push Helm Chart to AWS ECR."

